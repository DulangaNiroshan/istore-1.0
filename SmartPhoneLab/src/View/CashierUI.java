package View;

import Database.Database;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samsung
 */
public class CashierUI extends javax.swing.JFrame {

    private double total = 0.0;
    private DefaultTableModel dataModelInvoice;

    /**
     * Creates new form CashierUI
     */
    public CashierUI() {
        initComponents();
        dataModelInvoice = new DefaultTableModel(new String[]{"ItemID", "Name", "Category", "Price"}, 0);
        tblInvoice.setModel(dataModelInvoice);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCashierHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnRef = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAddProduct = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        lblProjectDetails = new javax.swing.JLabel();
        lblInvoice = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblPay = new javax.swing.JLabel();
        lblBal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtPayment = new javax.swing.JTextField();
        txtBalance = new javax.swing.JTextField();
        btnPay = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnCal = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblInvoice = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Smart Phone Lab - Cashier Dashboard");
        setName("frmCashierUI"); // NOI18N
        setResizable(false);

        lblCashierHeader.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCashierHeader.setText("Cashier Dashboard");

        tblProducts.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemID", "Name", "Category", "Price"
            }
        ));
        jScrollPane1.setViewportView(tblProducts);

        btnView.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnView.setText("View Products");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnRef.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnRef.setText("Refresh");
        btnRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAddProduct.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnAddProduct.setText("Add to Invoice");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnRemove.setText("Remove from Invoice");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        lblProjectDetails.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblProjectDetails.setText("Product Details Table");

        lblInvoice.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        lblInvoice.setText("Invoice Details Table");

        lblTotal.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblTotal.setText("Total :");

        lblPay.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblPay.setText("Payment :");

        lblBal.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblBal.setText("Balance :");

        btnPay.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        btnPrint.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnPrint.setText("Print Invoice");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnBack.setText("Back to Login");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCal.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnCal.setText("Calculate");
        btnCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalActionPerformed(evt);
            }
        });

        tblInvoice.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        tblInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemID", "Name", "Category", "Price"
            }
        ));
        jScrollPane3.setViewportView(tblInvoice);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRef)
                        .addGap(356, 356, 356)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnSearch))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnPrint)
                                        .addComponent(btnExit))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblPay)
                                        .addComponent(lblBal, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnCal))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPayment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnPay, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnView))
                            .addComponent(lblInvoice, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblProjectDetails, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(lblCashierHeader)))
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblCashierHeader)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBack)
                        .addComponent(btnRef))
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(28, 28, 28)
                .addComponent(lblProjectDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddProduct)
                    .addComponent(btnRemove)
                    .addComponent(btnView))
                .addGap(12, 12, 12)
                .addComponent(lblInvoice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrint)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTotal))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPay))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBal))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnExit)
                            .addComponent(btnCal)
                            .addComponent(btnPay))))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        Login login = new Login();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefActionPerformed
        // TODO add your handling code here:
        CashierUI cashier = new CashierUI();
        cashier.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRefActionPerformed

    private boolean dataLoaded = false;
    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        if (!dataLoaded) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/smart_phone_lab", "root", "");
                Statement st = con.createStatement();
                String sql = "select * from products";
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {
                    String id = String.valueOf(rs.getInt("itemid"));
                    String name = rs.getString("name");
                    String category = rs.getString("category");
                    String price = rs.getString("price");
                    String tbData[] = {id, name, category, price};
                    DefaultTableModel tblModel = (DefaultTableModel) tblProducts.getModel();
                    tblModel.addRow(tbData);
                }

                con.close();
                dataLoaded = true;
            } catch (ClassNotFoundException | SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Products Table Is Already Loaded!");
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void clearInvoice() {
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        model.setRowCount(0);
        txtTotal.setText("");
        txtPayment.setText("");
        txtBalance.setText("");
    }

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:
        if (dataModelInvoice.getRowCount() > 0) {
            try {
                try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/smart_phone_lab", "root", "")) {
                    conn.setAutoCommit(false);
                    String insertSQL = "INSERT INTO invoices (itemID, name, category, price) VALUES (?, ?, ?, ?)";
                    PreparedStatement insertStatement = conn.prepareStatement(insertSQL);

                    double totalSaleAmount = 0.0;

                    for (int i = 0; i < dataModelInvoice.getRowCount(); i++) {
                        String itemID = (String) dataModelInvoice.getValueAt(i, 0);
                        String name = (String) dataModelInvoice.getValueAt(i, 1);
                        String category = (String) dataModelInvoice.getValueAt(i, 2);
                        double price = (double) dataModelInvoice.getValueAt(i, 3);

                        insertStatement.setString(1, itemID);
                        insertStatement.setString(2, name);
                        insertStatement.setString(3, category);
                        insertStatement.setDouble(4, price);

                        insertStatement.executeUpdate();
                        totalSaleAmount += price;
                    }
                    double paymentAmount = Double.parseDouble(txtPayment.getText());
                    double balance = totalSaleAmount - paymentAmount;
                    txtBalance.setText(String.valueOf(balance));
                    conn.commit();
                }
                clearInvoice();
                JOptionPane.showMessageDialog(this, "Paid Successfully!\nData Sent To The DataBase!");
            } catch (SQLException | NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Paying Unsuccessful! Fill The Fields!");
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "No Items In The Invoice Table. Please Add Products First!");
        }

    }//GEN-LAST:event_btnPayActionPerformed

    // Method to find the index of an existing item in the invoice
    private int findExistingItemIndex(String itemID) {
        for (int i = 0; i < dataModelInvoice.getRowCount(); i++) {
            String existingItemID = (String) dataModelInvoice.getValueAt(i, 0);
            if (existingItemID.equals(itemID)) {
                return i;
            }
        }
        return -1;
    }

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        int selectedRow = tblProducts.getSelectedRow();

        if (selectedRow != -1) {
            try {
                String itemID = (String) tblProducts.getValueAt(selectedRow, 0);
                String name = (String) tblProducts.getValueAt(selectedRow, 1);
                String category = (String) tblProducts.getValueAt(selectedRow, 2);

                double price = Double.parseDouble((String) tblProducts.getValueAt(selectedRow, 3));
                dataModelInvoice.addRow(new Object[]{itemID, name, category, price});

                total += price;
                txtTotal.setText(String.valueOf(total));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid Quantity Format.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select A Product First!");
        }
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblInvoice.getSelectedRow();
        if (selectedRow != -1) {
            double price = (double) tblInvoice.getValueAt(selectedRow, 3);
            dataModelInvoice.removeRow(selectedRow);

            total -= price;
            txtTotal.setText(String.valueOf(total));
        } else {
            JOptionPane.showMessageDialog(this, "Please Select A Product From Products Table!");
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalActionPerformed
        // TODO add your handling code here:
        try {
            double totalAmount = Double.parseDouble(txtTotal.getText());
            double paymentAmount = Double.parseDouble(txtPayment.getText());

            double balance = totalAmount - paymentAmount;

            txtBalance.setText(String.valueOf(balance));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input format. Please enter valid numeric values.");
        }
    }//GEN-LAST:event_btnCalActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        performSearch();
    }

    private void performSearch() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/smart_phone_lab", "root", "");
            Statement st = con.createStatement();

            String sql = "SELECT * FROM products WHERE name LIKE ? OR itemid LIKE ? OR category LIKE ?";
            try (PreparedStatement ps = con.prepareStatement(sql)) {
                ps.setString(1, "%" + txtSearch.getText() + "%");
                ps.setString(2, "%" + txtSearch.getText() + "%");
                ps.setString(3, "%" + txtSearch.getText() + "%");

                ResultSet rs = ps.executeQuery();

                DefaultTableModel tblModel = (DefaultTableModel) tblProducts.getModel();
                tblModel.setRowCount(0);

                while (rs.next()) {
                    String id = String.valueOf(rs.getInt("ItemID"));
                    String name = rs.getString("Name");
                    String category = rs.getString("Category");
                    String price = rs.getString("Price");

                    String tbData[] = {id, name, category, price};
                    tblModel.addRow(tbData);
                }
            }
            con.close();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CashierUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCal;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnRef;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBal;
    private javax.swing.JLabel lblCashierHeader;
    private javax.swing.JLabel lblInvoice;
    private javax.swing.JLabel lblPay;
    private javax.swing.JLabel lblProjectDetails;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblInvoice;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
